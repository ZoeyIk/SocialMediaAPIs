USE [TestDB]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TBL_USER_ACCOUNT] (
    [USERID]   BIGINT        IDENTITY (1, 1) NOT NULL,
    [USERNAME] VARCHAR (50)  NOT NULL,
    [PASSWORD] VARCHAR (50)  NOT NULL,
    [FULLNAME] VARCHAR (200) NULL,
    CONSTRAINT [PK_TBL_USER_ACCOUNT_1] PRIMARY KEY CLUSTERED ([USERID] ASC),
    CONSTRAINT [IX_USER_NAME] UNIQUE NONCLUSTERED ([USERNAME] ASC)
);

GO

CREATE TABLE [dbo].[TBL_USER_POST] (
    [POSTID]      BIGINT          IDENTITY (1, 1) NOT NULL,
    [USERID]      BIGINT          NOT NULL,
	[FULLNAME]    VARCHAR (200)   NULL,
    [CREATEDTIME] DATETIME        NOT NULL,
    [CONTENT]     VARCHAR (1000)  NOT NULL,
    [IMAGE]       VARBINARY (MAX) NULL,
    [LIKES]       INT             NULL,
    [IMAGENAME]   VARCHAR (200)   NULL,
    CONSTRAINT [PK_TBL_USER_POST] PRIMARY KEY CLUSTERED ([POSTID] ASC),
    CONSTRAINT [FK_POST_USER_ID] FOREIGN KEY ([USERID]) REFERENCES [dbo].[TBL_USER_ACCOUNT] ([USERID])
);

GO

CREATE TABLE [dbo].[TBL_USER_COMMENT] (
    [COMMENTID]   BIGINT         IDENTITY (1, 1) NOT NULL,
    [POSTID]      BIGINT         NOT NULL,
    [USERID]      BIGINT         NOT NULL,
	[FULLNAME]    VARCHAR (200)  NULL,
    [COMMENT]     VARCHAR (1000) NULL,
    [CREATEDTIME] DATETIME       NOT NULL,
    CONSTRAINT [PK_TBL_USER_COMMENT] PRIMARY KEY CLUSTERED ([COMMENTID] ASC),
    CONSTRAINT [FK_USER_ID] FOREIGN KEY ([USERID]) REFERENCES [dbo].[TBL_USER_ACCOUNT] ([USERID]),
    CONSTRAINT [FK_POST_ID] FOREIGN KEY ([POSTID]) REFERENCES [dbo].[TBL_USER_POST] ([POSTID])
);

GO

CREATE TABLE [dbo].[TBL_USER_LIKES] (
    [POSTID]      BIGINT   NOT NULL,
    [USERID]      BIGINT   NOT NULL,
    [CREATEDTIME] DATETIME NOT NULL
);

GO

CREATE PROCEDURE [dbo].[spAPI_UpdateLikes]
	-- Add the parameters for the stored procedure here
	@POSTID INT,
	@USERID INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	BEGIN TRY
		BEGIN TRANSACTION
		-- CHECK IN RECORD IF THE USER LIKES THE POST ALREADY OR NOT
		IF EXISTS(SELECT POSTID FROM TBL_USER_LIKES WHERE POSTID=@POSTID AND USERID=@USERID)
		BEGIN
			-- IF EXISTS THEN USER UNLIKE THE POST
			UPDATE TBL_USER_POST SET LIKES-=1 WHERE POSTID=@POSTID
			
			-- DELETE THE LIKE RECORD
			DELETE FROM TBL_USER_LIKES WHERE POSTID=@POSTID AND USERID=@USERID
		END
		ELSE
		BEGIN
			-- TO VERIFY IF THE POST ID IS VALID
			IF EXISTS(SELECT POSTID FROM TBL_USER_POST WHERE POSTID=@POSTID)
			BEGIN
				-- INCREMENT THE POST LIKES
				UPDATE TBL_USER_POST SET LIKES+=1 WHERE POSTID=@POSTID
			
				-- INSERT A NEW LIKE RECORD
				INSERT INTO TBL_USER_LIKES VALUES (@POSTID,@USERID,CURRENT_TIMESTAMP)
			END
		END
		SELECT 'DONE UPDATE LIKE' AS RESULT
		COMMIT
	END TRY
	BEGIN CATCH
		ROLLBACK
		SELECT 'FAIL: ' + ERROR_MESSAGE() AS RESULT
	END CATCH
END

GO
